---
import Aside from '@/components/common/Aside.astro';
import BaseHead from '@/components/common/BaseHead.astro';
import Footer from '@/components/common/Footer.astro';
import Header from '@/components/common/Header.astro';
import { OgImage } from 'astro-opengraph-image/components';
import { ClientRouter } from 'astro:transitions';

interface Props {
  title: string;
  description: string;
  dim?: boolean;
  class?: string;
}
const { title, description, dim: isDim, class: classList } = Astro.props;

const themeCookie = Astro.cookies.get('theme');
const currentTheme = themeCookie?.value === 'dark' ? 'dark' : 'light'; // Default to light if no cookie
const themeClass = currentTheme === 'dark' ? 'dark' : '';
---

<html lang="en" class:list={[themeClass]}>
  <head>
    <BaseHead {title} {description} />
    <ClientRouter fallback="none" />
    <OgImage>
      <div id="main">
        <div id="top">
          <div id="box"></div>
          <h1>{title}</h1>
        </div>
        <p>{description}</p>
      </div>
      <style is:inline>
        #top {
          display: flex;
          align-items: center;
          gap: 1rem;
        }
        #box {
          height: 2rem;
          width: 2rem;
          background: #125eff;
          border-radius: 50%;
          display: flex;
        }
        #main {
          height: 100%;
          width: 100%;
          padding: 1rem;
          display: flex;
          flex-direction: column;
        }
        p {
          opacity: 0.7;
        }
      </style>
    </OgImage>
  </head>
  <body class="flex flex-col items-center p-5 sm:p-12 lg:p-20 text-text/70 font-crimson bg-bg">
    <Header />
    <div class="flex flex-wrap gap-20 w-full bg-bg">
      <Aside class="top-20 xl:sticky" dim={isDim} transition:persist="aside" />
      <div class="max-w-full w-[80ch]">
        <main class:list={[classList]}>
          <slot />
        </main>
      </div>
    </div>
    <Footer />
  </body>
</html>
